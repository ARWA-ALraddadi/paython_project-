#---------------------------------------------------------------------## Periodic Table browser## A simple application with a clearly defined "back end", "front# end" and "middle part".  It creates a GUI that allows the# user to browse basic information about chemical elements using# a drop-down menu.## NB: This version uses a "Combobox" widget from the "ttk" extension# to Tkinter.  If you don't have this extension module installed on# your computer you can modify this program to use a standard# "Listbox" widget instead, but this is less convenient given the# large number of choices.## Import the necessary GUI functionsfrom tkinter import Tk, Label, Button, CENTERfrom tkinter.ttk import Combobox#---------------------------------------------------------------------## The back end of our application is simply some long lists of data# concerning the chemical elements.#element_details = \[['H', 'Hydrogen', 1],['He', 'Helium', 2],['Li', 'Lithium', 3],['Be', 'Beryllium', 4],['B', 'Boron', 5],['C', 'Carbon', 6],['N', 'Nitrogen', 7],['O', 'Oxygen', 8],['F', 'Fluorine', 9],['Ne', 'Neon', 10],['Na', 'Sodium', 11],['Mg', 'Magnesium', 12],['Al', 'Aluminium', 13],['Si', 'Silicon', 14],['P', 'Phosphorus', 15],['S', 'Sulphur', 16],['Cl', 'Chlorine', 17],['Ar', 'Argon', 18],['K', 'Potassium', 19],['Ca', 'Calcium', 20],['Sc', 'Scandium', 21],['Ti', 'Titanium', 22],['V', 'Vanadium', 23],['Cr', 'Chromium', 24],['Mn', 'Manganese', 25],['Fe', 'Iron', 26],['Co', 'Cobalt', 27],['Ni', 'Nickel', 28],['Cu', 'Copper', 29],['Zn', 'Zinc', 30],['Ga', 'Gallium', 31],['Ge', 'Germanium', 32],['As', 'Arsenic', 33],['Se', 'Selenium', 34],['Br', 'Bromine', 35],['Kr', 'Krypton', 36],['Rb', 'Rubidium', 37],['Sr', 'Strontium', 38],['Y', 'Yttrium', 39],['Zr', 'Zirconium', 40],['Nb', 'Niobium', 41],['Mo', 'Molybdenum', 42],['Tc', 'Technetium', 43],['Ru', 'Ruthenium', 44],['Rh', 'Rhodium', 45],['Pd', 'Palladium', 46],['Ag', 'Silver', 47],['Cd', 'Cadmium', 48],['In', 'Indium', 49],['Sn', 'Tin', 50],['Sb', 'Antimony', 51],['Te', 'Tellurium', 52],['I', 'Iodine', 53],['Xe', 'Xenon', 54],['Cs', 'Caesium', 55],['Ba', 'Barium', 56],['La', 'Lanthanum', 57],['Ce', 'Cerium', 58],['Pr', 'Praseodymium', 59],['Nd', 'Neodymium', 60],['Pm', 'Promethium', 61],['Sm', 'Samarium', 62],['Eu', 'Europium', 63],['Gd', 'Gadolinium', 64],['Tb', 'Terbium', 65],['Dy', 'Dysprosium', 66],['Ho', 'Holmium', 67],['Er', 'Erbium', 68],['Tm', 'Thulium', 69],['Yb', 'Ytterbium', 70],['Lu', 'Lutetium', 71],['Hf', 'Hafnium', 72],['Ta', 'Tantalum', 73],['W', 'Tungsten', 74],['Re', 'Rhenium', 75],['Os', 'Osmium', 76],['Ir', 'Iridium', 77],['Pt', 'Platinum', 78],['Au', 'Gold', 79],['Hg', 'Mercury', 80],['Tl', 'Thallium', 81],['Pb', 'Lead', 82],['Bi', 'Bismuth', 83],['Po', 'Polonium', 84],['At', 'Astatine', 85],['Rn', 'Radon', 86],['Fr', 'Francium', 87],['Ra', 'Radium', 88],['Ac', 'Actinium', 89],['Th', 'Thorium', 90],['Pa', 'Protactinium', 91],['U', 'Uranium', 92],['Np', 'Neptunium', 93],['Pu', 'Plutonium', 94],['Am', 'Americium', 95],['Cm', 'Curium', 96],['Bk', 'Berkelium', 97],['Cf', 'Californium', 98],['Es', 'Einsteinium', 99],['Fm', 'Fermium', 100],['Md', 'Mendelevium', 101],['No', 'Nobelium', 102],['Lr', 'Lawrencium', 103],['Rf', 'Rutherfordium', 104],['Db', 'Dubnium', 105],['Sg', 'Seaborgium', 106],['Bh', 'Bohrium', 107],['Hs', 'Hassium', 108],['Mt', 'Meitnerium', 109],['Ds', 'Darmstadtium', 110],['Rg', 'Roentgenium', 111],['Uub', 'Ununbium', 112],['Uut', 'Ununtrium', 113],['Uug', 'Ununquadium', 114],['Uup', 'Ununpentium', 115],['Uuh', 'Ununhexium', 116],['Uus', 'Ununseptium', 117],['Uuo', 'Ununoctium', 118],['Dk', 'Dalekanium', 119],['Kt', 'Kryptonite', 120]]element_names = \['Actinium','Aluminium','Americium','Antimony','Argon','Arsenic','Astatine','Barium','Berkelium','Beryllium','Bismuth','Bohrium','Boron','Bromine','Cadmium','Caesium','Calcium','Californium','Carbon','Cerium','Chlorine','Chromium','Cobalt','Copper','Curium','Dalekanium','Darmstadtium','Dubnium','Dysprosium','Einsteinium','Erbium','Europium','Fermium','Fluorine','Francium','Gadolinium','Gallium','Germanium','Gold','Hafnium','Hassium','Helium','Holmium','Hydrogen','Indium','Iodine','Iridium','Iron','Krypton','Kryptonite','Lanthanum','Lawrencium','Lead','Lithium','Lutetium','Magnesium','Manganese','Meitnerium','Mendelevium','Mercury','Molybdenum','Neodymium','Neon','Neptunium','Nickel','Niobium','Nitrogen','Nobelium','Osmium','Oxygen','Palladium','Phosphorus','Platinum','Plutonium','Polonium','Potassium','Praseodymium','Promethium','Protactinium','Radium','Radon','Rhenium','Rhodium','Roentgenium','Rubidium','Ruthenium','Rutherfordium','Samarium','Scandium','Seaborgium','Selenium','Silicon','Silver','Sodium','Strontium','Sulphur','Tantalum','Technetium','Tellurium','Terbium','Thallium','Thorium','Thulium','Tin','Titanium','Tungsten','Ununbium','Ununhexium','Ununoctium','Ununpentium','Ununquadium','Ununseptium','Ununtrium','Uranium','Vanadium','Xenon','Ytterbium','Yttrium','Zinc','Zirconium']#---------------------------------------------------------------------## This is the central computational part of our application.  Its# primary purpose is to allow details of the elements to be looked up# and displayed via their name.## Given the name of an element, return its symbol and atomic# numberdef get_element_details(element_name):    for symbol, name, number in element_details:        if name == element_name:            return [symbol, number]    return ['--', 0] # return this if nothing is found# Get the user's choice from the menu and display the corresponding# details in the labeldef display_choice():    choice = names_list.get()    symbol, number = get_element_details(choice)    display_label['text'] = symbol + '  ' + str(number)        #---------------------------------------------------------------------## This is the front end of our application which creates the GUI.  As# is often the case, the GUI code is much more complicated than the# rest of the program!## Create a windowelement_browser = Tk()# Give the window a titleelement_browser.title('Element Browser')# Create a combo box widget to display the choices of element namenames_list = Combobox(element_browser, values = element_names,                      width = 15, justify = CENTER)# Create a button to push when the user is happy with their choicedisplay_button = Button(element_browser, text = ' Display ',                        activeforeground = 'red',                        font = ('Arial', 24), command = display_choice)# Create a label for displaying the chosen element's detailsdisplay_label = Label(element_browser, height = 1, width = 8,                      fg = 'green', font = ('Arial', 34))# Pack all the widgets into the main windownames_list.pack()display_label.pack()display_button.pack(pady = 5)# Start the event loop to react to user inputselement_browser.mainloop()